# Este archivo contiene todas las solicitudes REST para probar los endpoints de los conductores.
# Para ejecutar una solicitud, haz clic en "Send Request" justo encima de la línea del método.

### VARIABLES GLOBALES
# Usar variables hace que tus solicitudes sean reutilizables y fáciles de actualizar.
@baseUrl = http://127.0.0.1:5000
# Después de crear un conductor, copia su ID de la respuesta y pégalo aquí.
@driverId = r0Py05YhXYxnQ0sGhOB2


### 1. GET: Obtener todos los conductores
# Esta solicitud obtendrá la lista completa de todos los conductores disponibles en la base de datos.
GET {{baseUrl}}/drivers

###
# 2. POST: Crear un nuevo conductor
# Esta solicitud enviará los datos de un nuevo conductor a la base de datos.
# El Content-Type debe ser 'application/json' para que el servidor entienda el cuerpo de la solicitud.
# NOTA: Después de enviar esta solicitud, copia el ID del nuevo conductor de la respuesta
# y úsalo para las siguientes solicitudes (GET por ID, PUT, DELETE).
POST {{baseUrl}}/drivers
Content-Type: application/json

{
    "nombre": "Conductor de Prueba Final",
    "telefono": "3009988776",
    "tipoVehiculo": "Bicicleta"
}

###
# 3. GET: Obtener un conductor específico por ID
# Usa esta solicitud para obtener los detalles de un solo conductor.
# Asegúrate de haber pegado el ID correcto en la variable @driverId arriba.
GET {{baseUrl}}/drivers/{{driverId}}

###
# 4. PUT: Actualizar un conductor existente
# Utiliza esta solicitud para modificar los datos de un conductor existente.
# Reemplaza los campos en el cuerpo JSON con los datos que deseas actualizar.
PUT {{baseUrl}}/drivers/{{driverId}}
Content-Type: application/json

{
    "telefono": "3104180514",
    "estado": "Disponible",
    "nombre": "Conductor Actualizado"
}

###
# 5. DELETE: Eliminar un conductor
# Esta solicitud eliminará permanentemente al conductor asociado con el ID.
# ¡Ten cuidado al usar esta solicitud, ya que la acción es irreversible!
DELETE {{baseUrl}}/drivers/{{driverId}}
